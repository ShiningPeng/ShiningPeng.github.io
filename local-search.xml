<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从0到1使用 Hexo 框架搭建个人博客并部署到 GitHub Pages</title>
    <link href="/2020/09/04/article-1/"/>
    <url>/2020/09/04/article-1/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>也是最近一周才知道有<a href="https://docs.github.com/cn/github/working-with-github-pages/about-github-pages">Github Pages</a>这个东西，它是一个免费的服务器，可以使用 GitHub Pages 直接从 GitHub 仓库托管关于自己、您的组织或您的项目的站点。因为最近好多小伙伴都购买了域名和服务器来托管自己写的项目，于是我也屁颠屁颠地买了一个域名，并在这两天投入个人博客的搭建。在百度教程的时候看到比较多推荐的一个搭建博客的框架<a href="https://hexo.io/zh-cn/docs/">hexo</a>，然后就使用这个框架将博客搭建起来了，目前只是将博客一些基础的结构和功能弄好了，感兴趣的可以看看<a href="http://shiningpeng.top/">我的博客</a>，话不多说进入正题。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="前置步骤：安装好-git-和-node-js"><a href="#前置步骤：安装好-git-和-node-js" class="headerlink" title="前置步骤：安装好 git 和 node.js"></a>前置步骤：安装好 git 和 node.js</h3><h3 id="GitHub-Pages-部分"><a href="#GitHub-Pages-部分" class="headerlink" title="GitHub Pages 部分"></a>GitHub Pages 部分</h3><ul><li>在GitHub新建仓库，并且仓库名必须为 你的用户名.github.io  ，这里的用户名不区分大小写，都会转化为小写字母，比如我的用户名 ShiningPeng， 我建的仓库名字 shiningpeng.github.io </li><li>至少上传一次文件激活github pages，可以在初始化仓库时添加一个readme文件，或者可以按照创建完仓库后的命令行提示，直接把那一串命令放在一个新的文件夹 git bash 命令行中执行</li><li>自定义域名，如果你购买了域名，可以在 用户名.github.io 这个仓库的 setting 中一直往下滑找到 custom domain，把域名填进去，并点击 save 保存</li></ul><h3 id="本地-hexo-部分"><a href="#本地-hexo-部分" class="headerlink" title="本地 hexo 部分"></a>本地 hexo 部分</h3><ul><li>本地找个心仪的目录建个文件夹，鼠标右键git bash</li><li>使用npm安装脚手架 hexo-cli，当然也可以使用cnpm（需要下载淘宝镜像）<pre><code class="hljs bash">npm install -g hexo-cli</code></pre></li><li>安装hexo<pre><code class="hljs bash">npm install hexo</code></pre></li><li>初始化hexo，并安装依赖<pre><code class="hljs bash">hexo init 文件夹名称<span class="hljs-built_in">cd</span> 文件夹名称npm install</code></pre></li><li>生成的文件具体是做什么的可以去看<a href="https://hexo.io/zh-cn/docs/setup">官方文档</a></li><li>hexo generate，运行时可缩写为hexo g，用来生成静态文件</li><li>hexo server，可缩写为 hexo s，在本地启动服务器预览，默认为 <a href="http://localhost:4000/">http://localhost:4000/</a></li><li>hexo deploy，部署网站</li><li>hexo clean ，清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</li><li>在source目录下新建文件 CNAME ，此文件没有后缀名，用来存放域名，可以防止每次重新部署网站后GitHub pages的custom domain变为空，在文件中写入你的域名，可以不写www，没有域名可以不用建这个文件</li><li>安装 hexo-deployer-git，一键部署，将网站更新推送到GitHub<pre><code class="hljs bash">npm install hexo-deployer-git --save</code></pre></li><li>安装好后修改配置文件 _config.yml，一般是在文件最底部，修改为这样<pre><code class="hljs yml"><span class="hljs-attr">deploy:</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>  <span class="hljs-attr">repo:</span> <span class="hljs-string">&lt;repository</span> <span class="hljs-string">url&gt;</span> <span class="hljs-comment">#例如我的为 https://github.com/ShiningPeng/shiningpeng.github.io</span>  <span class="hljs-attr">branch:</span> [<span class="hljs-string">branch</span>]    <span class="hljs-comment"># 分支</span>  <span class="hljs-attr">message:</span> [<span class="hljs-string">message</span>]  <span class="hljs-comment"># 平常commit时的提交备注</span></code></pre></li><li>修改完文件hexo s预览无误之后，hexo clean,hexo g,hexo d 一把梭，建议还是在部署之前执行一遍clean</li></ul><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><ul><li>主题可以从<a href="https://hexo.io/themes/">hexo主题</a>中挑选一个喜欢的，然后点击蓝色文字进入主题，点击图片是进入这个主题的示例网站，不过有的网站可能更换域名或者域名过期了访问不了。点击蓝色文字后跳转到主题的GitHub源码地址，可以从readme查看该主题的应用步骤，或者点击提供的用户文档了解应用过程</li><li>一般主题的应用步骤<ol><li>在本地博客的那个文件夹下有一个themes目录存放主题，默认是landscape，在themes目录下打开命令行，将该主题源码克隆到本地，例如<pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git fluid</code></pre>命令中项目地址后面是给这个主题取个别名，方便后面使用，不改默认为仓库名，生成一个以此为名的文件夹</li><li>在根目录找到_config.yml文件，滑到最下方，找到 theme 字段，将landscape改为你刚取的别名，如果没取别名就改为仓库名</li><li>hexo clean, hexo g, hexo s 预览效果，一般主题会为你做好很多事情，基本上不需要自己写什么文件，只需要改改配置就能完成比较好的功能，比如网站的布局啊，样式啊，路由等等</li><li>需要改配置的话可以根据这个主题提供的文档来做适当的更改</li></ol></li></ul><h3 id="日常更新"><a href="#日常更新" class="headerlink" title="日常更新"></a>日常更新</h3><ul><li>这部分我目前也不是很熟，在慢慢摸索，大家可自行百度</li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/09/04/hello-world/"/>
    <url>/2020/09/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
